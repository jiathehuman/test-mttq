# Nginx configuration for MQTT load balancing with health checks
# This configuration provides transparent failover for MQTT clients

# Load the stream module for TCP load balancing
load_module modules/ngx_stream_module.so;

events {
    worker_connections 1024;
}

# HTTP server for health check endpoint and dashboard proxy
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging format for JSON logs
    log_format json_combined escape=json '{'
        '"timestamp":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request":"$request",'
        '"status":$status,'
        '"bytes_sent":$bytes_sent,'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"request_time":$request_time,'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"upstream_response_time":"$upstream_response_time"'
    '}';

    # Health check endpoint
    server {
        listen 8080;
        server_name localhost;

        access_log /var/log/nginx/health_access.log json_combined;
        error_log /var/log/nginx/health_error.log;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        location /mqtt-health {
            access_log off;
            proxy_pass http://localhost:5000/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Dashboard proxy
        location / {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket support for dashboard
        location /socket.io/ {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}

# Stream configuration for MQTT load balancing
stream {
    # Define upstream servers with health checks
    upstream mqtt_brokers {
        # Primary broker (highest priority)
        server 192.168.64.2:1883 weight=5 max_fails=3 fail_timeout=30s;

        # Backup brokers (sequential priority)
        server 192.168.64.3:1883 weight=4 max_fails=3 fail_timeout=30s backup;
        server 192.168.64.4:1883 weight=3 max_fails=3 fail_timeout=30s backup;
        server 192.168.64.5:1883 weight=2 max_fails=3 fail_timeout=30s backup;
        server 192.168.64.6:1883 weight=1 max_fails=3 fail_timeout=30s backup;        # Least connections load balancing
        least_conn;
    }

    # MQTT load balancer
    server {
        listen 1883;
        proxy_pass mqtt_brokers;

        # Connection settings optimized for MQTT
        proxy_timeout 60s;
        proxy_connect_timeout 5s;
        proxy_responses 1;  # MQTT is typically request-response

        # Enable session persistence (sticky sessions)
        # This helps maintain MQTT session state
        proxy_bind $remote_addr transparent;

        # Logging
        access_log /var/log/nginx/mqtt_access.log;
        error_log /var/log/nginx/mqtt_error.log;
    }

    # Health check for MQTT brokers (TCP check)
    server {
        listen 1884;
        proxy_pass mqtt_brokers;
        proxy_timeout 3s;
        proxy_connect_timeout 1s;
        access_log off;
    }
}

# Additional configurations for different environments
# Uncomment and modify as needed

# For production with SSL/TLS:
# stream {
#     upstream mqtt_brokers_ssl {
#         server 192.168.100.10:8883 weight=5 max_fails=3 fail_timeout=30s;
#         server 192.168.100.11:8883 weight=4 max_fails=3 fail_timeout=30s backup;
#         server 192.168.100.12:8883 weight=3 max_fails=3 fail_timeout=30s backup;
#         server 192.168.100.13:8883 weight=2 max_fails=3 fail_timeout=30s backup;
#         server 192.168.100.14:8883 weight=1 max_fails=3 fail_timeout=30s backup;
#     }
#
#     server {
#         listen 8883 ssl;
#         ssl_certificate /path/to/cert.pem;
#         ssl_certificate_key /path/to/key.pem;
#         proxy_pass mqtt_brokers_ssl;
#         proxy_timeout 60s;
#         proxy_connect_timeout 5s;
#     }
# }